//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "participants")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub campus_card: String,
    pub nick_name: String,
    pub date_registered: DateTime,
    pub last_transaction: Option<DateTime>,
    #[sea_orm(column_type = "Float", nullable)]
    pub tape_left_cm: Option<f32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::transaction_log::Entity")]
    TransactionLog,
}

impl Related<super::transaction_log::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TransactionLog.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
